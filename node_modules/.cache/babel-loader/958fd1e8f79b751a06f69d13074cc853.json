{"ast":null,"code":"var _jsxFileName = \"/Users/ruizhou/Desktop/navtask/src/components/Board.js\";\nimport \"../styles/Board.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport List from \"./List\";\nimport AddList from \"./AddList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addingList: false\n    };\n\n    this.toggleAddingList = () => this.setState({\n      addingList: !this.state.addingList\n    });\n\n    this.handleDragEnd = ({\n      source,\n      destination,\n      type\n    }) => {\n      // dropped outside the allowed zones\n      if (!destination) return;\n      const dispatch = this.props.dispatch; // Move list\n\n      if (type === \"COLUMN\") {\n        // Prevent update if nothing has changed\n        if (source.index !== destination.index) {\n          dispatch({\n            type: \"MOVE_LIST\",\n            payload: {\n              oldListIndex: source.index,\n              newListIndex: destination.index\n            }\n          });\n        }\n\n        return;\n      } // Move card\n\n\n      if (source.index !== destination.index || source.droppableId !== destination.droppableId) {\n        dispatch({\n          type: \"MOVE_CARD\",\n          payload: {\n            sourceListId: source.droppableId,\n            destListId: destination.droppableId,\n            oldCardIndex: source.index,\n            newCardIndex: destination.index,\n            btn_color: \"red\" //hector\n\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const board = this.props.board;\n    const addingList = this.state.addingList;\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"board\",\n        direction: \"horizontal\",\n        type: \"COLUMN\",\n        children: (provided, _snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Board\",\n          ref: provided.innerRef,\n          children: [board.lists.map((listId, index) => {\n            return /*#__PURE__*/_jsxDEV(List, {\n              listId: listId,\n              index: index\n            }, listId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 24\n            }, this);\n          }), provided.placeholder, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Add-List\",\n            children: addingList ? /*#__PURE__*/_jsxDEV(AddList, {\n              toggleAddingList: this.toggleAddingList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: this.toggleAddingList,\n              className: \"Add-List-Button\",\n              children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), \" Add a list\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  board: state.board\n});\n\nexport default connect(mapStateToProps)(Board);","map":{"version":3,"sources":["/Users/ruizhou/Desktop/navtask/src/components/Board.js"],"names":["React","Component","connect","DragDropContext","Droppable","List","AddList","Board","state","addingList","toggleAddingList","setState","handleDragEnd","source","destination","type","dispatch","props","index","payload","oldListIndex","newListIndex","droppableId","sourceListId","destListId","oldCardIndex","newCardIndex","btn_color","render","board","provided","_snapshot","innerRef","lists","map","listId","placeholder","mapStateToProps"],"mappings":"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","sourcesContent":["import \"../styles/Board.css\";\r\n\r\nimport React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport List from \"./List\";\r\nimport AddList from \"./AddList\";\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    addingList: false\r\n  };\r\n\r\n  toggleAddingList = () =>\r\n    this.setState({ addingList: !this.state.addingList });\r\n\r\n  handleDragEnd = ({ source, destination, type }) => {\r\n    \r\n    // dropped outside the allowed zones\r\n    if (!destination) return;\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    // Move list\r\n    if (type === \"COLUMN\") {\r\n      // Prevent update if nothing has changed\r\n      if (source.index !== destination.index) {\r\n        dispatch({\r\n          type: \"MOVE_LIST\",\r\n          payload: {\r\n            oldListIndex: source.index,\r\n            newListIndex: destination.index\r\n          }\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Move card\r\n    if (\r\n      source.index !== destination.index ||\r\n      source.droppableId !== destination.droppableId\r\n    ) {\r\n     \r\n      dispatch({\r\n        type: \"MOVE_CARD\",\r\n        payload: {\r\n          sourceListId: source.droppableId,\r\n          destListId: destination.droppableId,\r\n          oldCardIndex: source.index,\r\n          newCardIndex: destination.index,\r\n          btn_color : \"red\"//hector\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    const { addingList } = this.state;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.handleDragEnd}>\r\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\r\n          {(provided, _snapshot) => (\r\n            <div className=\"Board\" ref={provided.innerRef}>\r\n              {board.lists.map((listId, index) => {\r\n                return <List listId={listId} key={listId} index={index} />;\r\n              })}\r\n\r\n              {provided.placeholder}\r\n\r\n              <div className=\"Add-List\">\r\n                {addingList ? (\r\n                  <AddList toggleAddingList={this.toggleAddingList} />\r\n                ) : (\r\n                  <div\r\n                    onClick={this.toggleAddingList}\r\n                    className=\"Add-List-Button\"\r\n                  >\r\n                    <ion-icon name=\"add\" /> Add a list\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ board: state.board });\r\n\r\nexport default connect(mapStateToProps)(Board);\r\n"]},"metadata":{},"sourceType":"module"}