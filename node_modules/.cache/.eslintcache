[{"/Users/ruizhou/Desktop/CIS499/navtask/src/index.js":"1","/Users/ruizhou/Desktop/CIS499/navtask/src/store.js":"2","/Users/ruizhou/Desktop/CIS499/navtask/src/serviceWorker.js":"3","/Users/ruizhou/Desktop/CIS499/navtask/src/components/App.js":"4","/Users/ruizhou/Desktop/CIS499/navtask/src/seed.js":"5","/Users/ruizhou/Desktop/CIS499/navtask/src/components/Navbar.js":"6","/Users/ruizhou/Desktop/CIS499/navtask/src/components/Board.js":"7","/Users/ruizhou/Desktop/CIS499/navtask/src/components/Home.js":"8","/Users/ruizhou/Desktop/CIS499/navtask/src/components/CardEditor.js":"9","/Users/ruizhou/Desktop/CIS499/navtask/src/components/EditButtons.js":"10","/Users/ruizhou/Desktop/CIS499/navtask/src/components/Card.js":"11","/Users/ruizhou/Desktop/CIS499/navtask/src/components/NavbarData.js":"12","/Users/ruizhou/Desktop/CIS499/navtask/src/components/List.js":"13","/Users/ruizhou/Desktop/CIS499/navtask/src/components/AddList.js":"14","/Users/ruizhou/Desktop/CIS499/navtask/src/components/ListEditor.js":"15"},{"size":642,"mtime":1619145344000,"results":"16","hashOfConfig":"17"},{"size":5754,"mtime":1619158572000,"results":"18","hashOfConfig":"17"},{"size":5093,"mtime":1619141998000,"results":"19","hashOfConfig":"17"},{"size":764,"mtime":1619141998000,"results":"20","hashOfConfig":"17"},{"size":1182,"mtime":1619157514000,"results":"21","hashOfConfig":"17"},{"size":1421,"mtime":1619141998000,"results":"22","hashOfConfig":"17"},{"size":2598,"mtime":1619153672000,"results":"23","hashOfConfig":"17"},{"size":216,"mtime":1619141998000,"results":"24","hashOfConfig":"17"},{"size":2232,"mtime":1619141998000,"results":"25","hashOfConfig":"17"},{"size":1157,"mtime":1619141998000,"results":"26","hashOfConfig":"17"},{"size":3443,"mtime":1619567931380,"results":"27","hashOfConfig":"17"},{"size":427,"mtime":1619141998000,"results":"28","hashOfConfig":"17"},{"size":3522,"mtime":1619152950000,"results":"29","hashOfConfig":"17"},{"size":1222,"mtime":1619141998000,"results":"30","hashOfConfig":"17"},{"size":1281,"mtime":1619141998000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f562u9",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ruizhou/Desktop/CIS499/navtask/src/index.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/store.js",["67"],"import { combineReducers, createStore } from \"redux\";\r\nimport throttle from \"lodash.throttle\";\r\nimport seed from \"./seed\";\r\n\r\nconst board = (state = { lists: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\": {\r\n      const { listId } = action.payload;\r\n      return { lists: [...state.lists, listId] };\r\n    }\r\n    case \"MOVE_LIST\": {\r\n      const { oldListIndex, newListIndex } = action.payload;\r\n      const newLists = Array.from(state.lists);\r\n      const [removedList] = newLists.splice(oldListIndex, 1);\r\n      newLists.splice(newListIndex, 0, removedList);\r\n      return { lists: newLists };\r\n    }\r\n    case \"DELETE_LIST\": {\r\n      const { listId } = action.payload;\r\n      const filterDeleted = tmpListId => tmpListId !== listId;\r\n      const newLists = state.lists.filter(filterDeleted);\r\n      return { lists: newLists };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst listsById = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\": {\r\n      const { listId, listTitle } = action.payload;\r\n      return {\r\n        ...state,\r\n        [listId]: { _id: listId, title: listTitle, cards: [] }\r\n      };\r\n    }\r\n    \r\n    \r\n    case \"CHANGE_LIST_TITLE\": {\r\n      const { listId, listTitle } = action.payload;\r\n      return {\r\n        ...state,\r\n        [listId]: { ...state[listId], title: listTitle }\r\n      };\r\n    }\r\n    case \"DELETE_LIST\": {\r\n      const { listId } = action.payload;\r\n      const { [listId]: deletedList, ...restOfLists } = state;\r\n      return restOfLists;\r\n    }\r\n    case \"ADD_CARD\": {\r\n      \r\n      const { listId, cardId } = action.payload;\r\n      return {\r\n        ...state,\r\n        [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\r\n      };\r\n    }\r\n    case \"MOVE_CARD\": {\r\n      const {\r\n        oldCardIndex,\r\n        newCardIndex,\r\n        sourceListId,\r\n        destListId,\r\n        btn_color\r\n      } = action.payload;\r\n      // Move within the same list\r\n      \r\n      if (sourceListId === destListId) {\r\n        const newCards = Array.from(state[sourceListId].cards);\r\n        const [removedCard] = newCards.splice(oldCardIndex, 1);\r\n        newCards.splice(newCardIndex, 0, removedCard);\r\n        return {\r\n          ...state,\r\n          [sourceListId]: { ...state[sourceListId], cards: newCards }\r\n        };\r\n      }\r\n      // Move card from one list to another\r\n      \r\n      const sourceCards = Array.from(state[sourceListId].cards);\r\n      \r\n      const [removedCard] = sourceCards.splice(oldCardIndex, 1);\r\n      const destinationCards = Array.from(state[destListId].cards);\r\n      destinationCards.splice(newCardIndex, 0, removedCard);\r\n      \r\n      return {\r\n        ...state,\r\n        [sourceListId]: { ...state[sourceListId], cards: sourceCards },\r\n        [destListId]: { ...state[destListId], cards: destinationCards }\r\n      };\r\n    }\r\n    case \"DELETE_CARD\": {\r\n      const { cardId: deletedCardId, listId } = action.payload;\r\n      const filterDeleted = cardId => cardId !== deletedCardId;\r\n      return {\r\n        ...state,\r\n        [listId]: {\r\n          ...state[listId],\r\n          cards: state[listId].cards.filter(filterDeleted)\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst cardsById = (state = {}, action) => {\r\n  \r\n  switch (action.type) {\r\n    case \"ADD_CARD\": {\r\n      \r\n      const { cardText, cardId ,btn_Color } = action.payload;\r\n      return { ...state, [cardId]: { text: cardText, _id: cardId ,btn_color: btn_Color  } };//hector\r\n    }\r\n    \r\n    case \"MOVE_CARD\":{\r\n      console.log(state);\r\n      const { cardText, cardId ,btn_Color } = action.payload;\r\n      return { ...state, [cardId]: { text: cardText, _id: cardId ,btn_color: btn_Color  } };//hector\r\n    }\r\n    case \"CHANGE_CARD_COLOR\":{\r\n      \r\n      const { cardText, cardId ,btn_Color } = action.payload;\r\n      console.log(btn_Color)\r\n      return { ...state, [cardId]: { text: cardText, _id: cardId ,btn_color: btn_Color  } };\r\n    }//hector\r\n    /*\r\n    case \"CHANGE_CARD_COLOR\":{\r\n      const { Event, cardId } = action.payload;\r\n      return { ...state, [cardId]: { color: Event, _id: cardId } };\r\n    }*/\r\n    case \"CHANGE_CARD_TEXT\": {\r\n      const { cardText, cardId } = action.payload;\r\n      return { ...state, [cardId]: { ...state[cardId], text: cardText } };\r\n    }\r\n    case \"DELETE_CARD\": {\r\n      const { cardId } = action.payload;\r\n      const { [cardId]: deletedCard, ...restOfCards } = state;\r\n      return restOfCards;\r\n    }\r\n    // Find every card from the deleted list and remove it\r\n    case \"DELETE_LIST\": {\r\n      const { cards: cardIds } = action.payload;\r\n      return Object.keys(state)\r\n        .filter(cardId => !cardIds.includes(cardId))\r\n        .reduce(\r\n          (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\r\n          {}\r\n        );\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  board,\r\n  listsById,\r\n  cardsById\r\n});\r\n\r\nconst saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(reducers, persistedState);\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState(store.getState());\r\n  }, 1000)\r\n);\r\n\r\nconsole.log(store.getState());\r\nif (!store.getState().board.lists.length) {\r\n  console.log(\"SEED\");\r\n  seed(store);\r\n}\r\n\r\nexport default store;\r\n","/Users/ruizhou/Desktop/CIS499/navtask/src/serviceWorker.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/App.js",["68","69","70","71"],"import \"../styles/App.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport Board from \"./Board\";\r\nimport Navbar from \"./Navbar\";\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CardEditor from \"./CardEditor\";\r\nimport EditButtons from \"./EditButtons\";\r\nimport Card from \"./Card\";\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n     \r\n      <div className=\"App\">\r\n       \r\n       <Router>\r\n         <Navbar/>\r\n         <Switch>\r\n           <Route path='/' exact component={Home} />\r\n           <Route path='/taskmanager' component={Board} />\r\n\r\n         </Switch>\r\n       </Router>\r\n       \r\n       \r\n       \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/Users/ruizhou/Desktop/CIS499/navtask/src/seed.js",["72"],"import shortid from \"shortid\";\r\n\r\nexport default store => {\r\n  console.log(\"Insert first list\");\r\n  const firstListId = shortid.generate();\r\n\r\n  store.dispatch({\r\n    type: \"ADD_LIST\",\r\n    payload: { listId: firstListId, listTitle: \"First list\" }\r\n  });\r\n\r\n  store.dispatch({\r\n    type: \"ADD_CARD\",\r\n    payload: {\r\n      listId: firstListId,\r\n      cardId: shortid.generate(),\r\n      cardText: \"First card\",\r\n      btn_Color : \"blue\"\r\n    }\r\n  });\r\n\r\n  store.dispatch({\r\n    type: \"ADD_CARD\",\r\n    payload: {\r\n      listId: firstListId,\r\n      cardId: shortid.generate(),\r\n      cardText: \"Second card\",\r\n      btn_Color : \"blue\"\r\n    }\r\n  });\r\n\r\n  console.log(\"Insert second list\");\r\n  const secondListId = shortid.generate();\r\n\r\n  store.dispatch({\r\n    type: \"ADD_LIST\",\r\n    payload: { listId: secondListId, listTitle: \"Second list\" }\r\n  });\r\n\r\n  store.dispatch({\r\n    type: \"ADD_CARD\",\r\n    payload: {\r\n      listId: secondListId,\r\n      cardId: shortid.generate(),\r\n      cardText: \"Card 1\"\r\n    }\r\n  });\r\n\r\n  store.dispatch({\r\n    type: \"ADD_CARD\",\r\n    payload: {\r\n      listId: secondListId,\r\n      cardId: shortid.generate(),\r\n      cardText: \"Card 2\"\r\n    }\r\n  });\r\n};\r\n","/Users/ruizhou/Desktop/CIS499/navtask/src/components/Navbar.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/Board.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/Home.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/CardEditor.js",["73"],"import \"../styles/CardEditor.css\";\r\nimport React, { Component } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport EditButtons from \"./EditButtons\";\r\n//import Card from \"./Card\";\r\n//import { Redirect } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass CardEditor extends Component {\r\n\r\n  //static propsTypes ={\r\n   // onColor:PropTypes.func.isRequired\r\n  //}\r\n  state = {\r\n    text: this.props.text || \"\",\r\n    // btn是color的初始值\r\n    btn: \"\"\r\n  };\r\n  \r\n  handleChangeText = event => this.setState({ text: event.target.value });\r\n\r\n  onEnter = e => {\r\n    const { text } = this.state;\r\n    \r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.props.onSave(text);\r\n    }\r\n  };\r\n  \r\n\r\n//create color function（创建的color function）\r\ncolor=(Event) => {\r\n    //Event.persist();  \r\n    this.setState({btn:Event.target.value});\r\n    this.props.onColor(Event.target.value);\r\n    \r\n  };\r\n  \r\n  render() {\r\n    const { text,btn } = this.state;\r\n    const { onSave, onCancel, onDelete,adding} = this.props;\r\n    \r\n    return (\r\n      \r\n      <div className=\"Edit-Card\">\r\n        <div\r\n        className = \"Button\"\r\n        Button=\"onClick\"\r\n        >\r\n        </div>\r\n        \r\n        <div className=\"Card\">\r\n          <TextareaAutosize\r\n            autoFocus\r\n            className=\"Edit-Card-Textarea\"\r\n            placeholder=\"Enter the text for this card...\"\r\n            value={text}\r\n            onChange={this.handleChangeText}\r\n            onKeyDown={this.onEnter}\r\n          />\r\n          \r\n        </div>\r\n        {adding ?\r\n        <EditButtons\r\n          handleSave={() => onSave(text)}\r\n          saveLabel={adding ? \"Add card\" : \"Save\"}\r\n          handleDelete={onDelete}\r\n          handleCancel={onCancel}\r\n          red={btn}\r\n        />\r\n        :\r\n        <EditButtons\r\n          handleSave={() => onSave(text)}\r\n          saveLabel={adding ? \"Add card\" : \"Save\"}\r\n          handleDelete={onDelete}\r\n          handleCancel={onCancel} // call select function\r\n          handleColor={this.color} // call select function\r\n          red={btn}\r\n        />\r\n        }\r\n        \r\n      </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default CardEditor;\r\n","/Users/ruizhou/Desktop/CIS499/navtask/src/components/EditButtons.js",["74"],"import \"../styles/EditButtons.css\";\r\nimport React from \"react\";\r\nimport { PropsTypes } from 'react'\r\n\r\n// red 和 handlecolor是select的function\r\nconst EditButtons = ({ handleSave, saveLabel, handleDelete, handleCancel,handleColor,red}) => (\r\n\r\n  \r\n  <div className=\"Edit-Buttons\">\r\n    <div\r\n      tabIndex=\"0\"\r\n      className=\"Edit-Button\"\r\n      style={{ backgroundColor: \"#5aac44\" }}\r\n      onClick={handleSave}\r\n    >\r\n     {saveLabel}\r\n     \r\n    </div>\r\n    \r\n    {handleDelete && (\r\n      <div\r\n        tabIndex=\"0\"\r\n        className=\"Edit-Button\"\r\n        style={{ backgroundColor: \"#EA2525\", marginLeft: 0 }}\r\n        onClick={handleDelete}\r\n      >\r\n        Delete\r\n      </div>\r\n\r\n      \r\n    )}\r\n    \r\n    <div tabIndex=\"0\" className=\"Edit-Button-Cancel\" onClick={handleCancel}>\r\n      <ion-icon name=\"close\" />\r\n    </div>\r\n    \r\n\r\n\r\n\r\n    { handleColor&&(\r\n\r\n    <select value = {red} onChange={handleColor} style={{backgroundColor:red}}>\r\n    <option value=\"red\" >Red</option>\r\n    <option value=\"green\">Green</option>\r\n    <option value=\"yellow\">Yellow</option>\r\n    </select>\r\n    )}\r\n  </div>\r\n\r\n\r\n);\r\n\r\nexport default EditButtons;\r\n\r\n","/Users/ruizhou/Desktop/CIS499/navtask/src/components/Card.js",["75"],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/NavbarData.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/List.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/AddList.js",[],"/Users/ruizhou/Desktop/CIS499/navtask/src/components/ListEditor.js",[],{"ruleId":"76","severity":1,"message":"77","line":66,"column":9,"nodeType":"78","messageId":"79","endLine":66,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":3,"column":17,"nodeType":"78","messageId":"79","endLine":3,"endColumn":26},{"ruleId":"76","severity":1,"message":"81","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":18},{"ruleId":"76","severity":1,"message":"82","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":19},{"ruleId":"76","severity":1,"message":"83","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":3,"column":1,"nodeType":"86","endLine":57,"endColumn":3},{"ruleId":"76","severity":1,"message":"87","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":17},{"ruleId":"76","severity":1,"message":"88","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":78,"column":29,"nodeType":"78","messageId":"79","endLine":78,"endColumn":38},"no-unused-vars","'btn_color' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'CardEditor' is defined but never used.","'EditButtons' is defined but never used.","'Card' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'PropTypes' is defined but never used.","'PropsTypes' is defined but never used."]